/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
public class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        // Start typing your Java solution below
        // DO NOT write main() function 
        ArrayList <ListNode> a= new ArrayList<ListNode>();
        ListNode previous = new ListNode(0);
        ListNode head = previous;
        boolean flag=false;int result=0;
        ListNode temp=null;
        do{
            if(flag)result = 1+l1.val+l2.val;
            else result = l1.val+l2.val;
            if(result>9){
                result=result-10;
                flag=true;
            }
            else flag=false;
            if(temp==null){temp=new ListNode(result);head=temp;}
            else{
            
                previous=temp;
                temp=new ListNode(result);
                previous.next=temp;
            }
                l1=l1.next;
                l2=l2.next;
            }while(l1!=null&&l2!=null);
         while(l1!=null){
             if(flag)result=l1.val+1;
             else result = l1.val;
             if(result>9){result=0;flag=true;}
             else flag=false;
             previous=temp;
             temp=new ListNode(result);
             previous.next=temp;
             l1=l1.next;
         }
         while(l2!=null){
             if(flag)result=l2.val+1;
             else result = l2.val;
             if(result>9){result=0;flag=true;}
             else flag=false;
             previous=temp;
             temp=new ListNode(result);
             previous.next=temp;
             l2=l2.next;
         }
         if(flag){
             previous=temp;
             temp=new ListNode(1);
             previous.next=temp;
         }
         return head;
        
    }
}
